generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  idRol    Int       @id
  nombre   String
  usuarios Usuario[]
}

model Usuario {
  idUsuario  Int       @id @default(autoincrement())
  AvatarURI  String?
  idRol      Int?
  usuario    String
  correo     String    @unique
  contrasena String
  medico     Medico?
  paciente   Paciente?
  rol        Rol?      @relation(fields: [idRol], references: [idRol])
}

model Departamento {
  idDepartamento Int         @id
  nombre         String
  municipios     Municipio[]
}

model Municipio {
  idMunicipio    Int          @id @default(autoincrement())
  idDepartamento Int
  nombre         String
  departamento   Departamento @relation(fields: [idDepartamento], references: [idDepartamento])
  pacientes      Paciente[]
}

model Paciente {
  idPaciente           Int                  @id @default(autoincrement())
  idUsuario            Int                  @unique
  idMunicipio          Int
  cedula               String?
  nombres              String
  apellidos            String
  direccion            String
  numeroInss           String?
  profesion            String
  fechaNacimiento      DateTime
  lugarNacimiento      String
  sexo                 String
  telefono             String
  nombrePadre          String?
  nombreMadre          String?
  tipoSangre           String
  citas                Cita[]
  consultas            Consulta[]
  expediente           Expediente?
  ordenesExamenes      OrdenExamen[]
  municipio            Municipio            @relation(fields: [idMunicipio], references: [idMunicipio])
  usuario              Usuario              @relation(fields: [idUsuario], references: [idUsuario])
  pacienteSignoVitales PacienteSignoVital[]
  tratamientos         Tratamiento[]
  vacunaciones         Vacunacion[]
}

model UnidadSalud {
  idUnidadSalud Int          @id @default(autoincrement())
  nombre        String
  citas         Cita[]
  consultas     Consulta[]
  vacunaciones  Vacunacion[]
}

model Cita {
  idCita        Int         @id @default(autoincrement())
  idPaciente    Int
  idUnidadSalud Int
  fecha         DateTime
  hora          DateTime
  paciente      Paciente    @relation(fields: [idPaciente], references: [idPaciente])
  unidadSalud   UnidadSalud @relation(fields: [idUnidadSalud], references: [idUnidadSalud])
}

model SignoVital {
  idSignoVital       Int                 @id @default(autoincrement())
  fecha              DateTime
  hora               DateTime
  pulso              Float
  temperatura        Float
  presionArterial    Float
  frecuenciaCardiaca Float
  orina              String
  liquidos           String
  peso               Float
  respiracion        String
  pacienteSignoVital PacienteSignoVital?
}

model PacienteSignoVital {
  idPacienteSignoVital Int                 @id @default(autoincrement())
  idPaciente           Int
  idSignoVital         Int                 @unique
  consultaSignoVital   ConsultaSignoVital?
  paciente             Paciente            @relation(fields: [idPaciente], references: [idPaciente])
  signoVital           SignoVital          @relation(fields: [idSignoVital], references: [idSignoVital])
}

model Expediente {
  idExpediente      Int                @id @default(autoincrement())
  idPaciente        Int                @unique
  numeroExpediente  String
  fechaCreacion     DateTime           @default(now())
  fechaModificacion DateTime?          @updatedAt
  consultas         Consulta[]
  emergencias       Emergencia[]
  paciente          Paciente           @relation(fields: [idPaciente], references: [idPaciente])
  historialClinico  HistorialClinico[]
}

model Emergencia {
  idEmergencia       Int        @id @default(autoincrement())
  vehiculoMotorizado Boolean
  otroTransporte     Boolean
  caida              Boolean
  maquinaria         Boolean
  efectosTardios     Boolean
  fenomenoNatural    Boolean
  asaltOAgresion     Boolean
  intentoSuicidio    Boolean
  incendioExplosion  Boolean
  otro               Boolean
  trabajo            Boolean
  vivienda           Boolean
  centroEstudio      Boolean
  centroMedico       Boolean
  viaPublica         Boolean
  deporteDive        Boolean
  otroLugar          Boolean
  fecha              DateTime
  hora               DateTime
  resumenClinico     String
  examenFisico       String
  diagnostico        String
  planes             String
  fallecido          Boolean
  abandono           Boolean
  alta               Boolean
  idExpediente       Int
  expediente         Expediente @relation(fields: [idExpediente], references: [idExpediente])
}

model TipoEnfermedad {
  idTipoEnfermedad Int          @id @default(autoincrement())
  tipoEnfermedad   String
  enfermedades     Enfermedad[]
}

model Enfermedad {
  idEnfermedad               Int                          @id @default(autoincrement())
  idTipoEnfermedad           Int
  nombre                     String
  tipoEnfermedad             TipoEnfermedad               @relation(fields: [idTipoEnfermedad], references: [idTipoEnfermedad])
  historialClinicoEnfermedad HistorialClinicoEnfermedad[] @relation("EnfermedadToHistorialClinicoEnfermedad")
}

model Vacunacion {
  idVacunacion           Int         @id @default(autoincrement())
  idPaciente             Int
  idUnidadSalud          Int
  nombreVacuna           String
  fechaVacunacion        DateTime
  fechaProximaVacunacion DateTime
  paciente               Paciente    @relation(fields: [idPaciente], references: [idPaciente])
  unidadSalud            UnidadSalud @relation(fields: [idUnidadSalud], references: [idUnidadSalud])
}

model HistorialClinico {
  idHistorialClinico                    Int                         @id @default(autoincrement())
  idExpediente                          Int
  motivoConsulta                        String
  horasSueno                            Int
  actividadFisica                       String
  alimentacion                          String
  tabaco                                String
  drogas                                String
  farmacos                              String
  historiaEnfermedadActual              String
  enfermedadesInfectoContagiosasPrevias String
  enfermedadesCronicas                  String
  cirugiasPreviasRealizadas             String
  hospitalizaciones                     String
  aspectoGeneral                        String
  pielYMucosas                          String
  cabezaYCuello                         String
  torax                                 String
  expediente                            Expediente                  @relation(fields: [idExpediente], references: [idExpediente])
  historialClinicoEnfermedad            HistorialClinicoEnfermedad?
}

model HistorialClinicoEnfermedad {
  idHistorialClinicoEnfermedad Int              @id @default(autoincrement())
  idHistorialClinico           Int              @unique
  historialClinico             HistorialClinico @relation(fields: [idHistorialClinico], references: [idHistorialClinico])
  enfermedades                 Enfermedad[]     @relation("EnfermedadToHistorialClinicoEnfermedad")
}

model Especialidad {
  idEspecialidad Int      @id @default(autoincrement())
  nombre         String
  medicos        Medico[]
}

model Medico {
  idMedico       Int          @id @default(autoincrement())
  idUsuario      Int          @unique
  idEspecialidad Int
  consultas      Consulta[]
  especialidad   Especialidad @relation(fields: [idEspecialidad], references: [idEspecialidad])
  usuario        Usuario      @relation(fields: [idUsuario], references: [idUsuario])
}

model Consulta {
  idConsulta         Int                 @id @default(autoincrement())
  idMedico           Int
  idPaciente         Int
  idExpediente       Int
  idUnidadSalud      Int
  fecha              DateTime
  evaluacion         String
  planes             String
  expediente         Expediente          @relation(fields: [idExpediente], references: [idExpediente])
  medico             Medico              @relation(fields: [idMedico], references: [idMedico])
  paciente           Paciente            @relation(fields: [idPaciente], references: [idPaciente])
  unidadSalud        UnidadSalud         @relation(fields: [idUnidadSalud], references: [idUnidadSalud])
  consultaSignoVital ConsultaSignoVital?
}

model ConsultaSignoVital {
  idConsultaSignoVital Int                @id @default(autoincrement())
  idConsulta           Int                @unique
  idPacienteSignoVital Int                @unique
  consulta             Consulta           @relation(fields: [idConsulta], references: [idConsulta])
  pacienteSignoVital   PacienteSignoVital @relation(fields: [idPacienteSignoVital], references: [idPacienteSignoVital])
}

model Examen {
  idExamen        Int           @id @default(autoincrement())
  nombre          String
  ordenesExamenes OrdenExamen[]
}

model OrdenExamen {
  idOrdenExamen Int      @id @default(autoincrement())
  idPaciente    Int
  idExamen      Int
  resultado     String
  examen        Examen   @relation(fields: [idExamen], references: [idExamen])
  paciente      Paciente @relation(fields: [idPaciente], references: [idPaciente])
}

model Tratamiento {
  idTratamiento     Int      @id @default(autoincrement())
  idPaciente        Int
  nombre            String
  unidadTratamiento String
  dosis             String
  fechaInicio       DateTime
  fechaFin          DateTime
  frecuencia        String
  paciente          Paciente @relation(fields: [idPaciente], references: [idPaciente])
}
